from telegram import MessageEntity, ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import Updater, CommandHandler, ConversationHandler, MessageHandler, Filters, CallbackQueryHandler

sponsors = ['@dilik_zel']
users = []
usersId = []
links = {}

buttons = ReplyKeyboardMarkup([['–ü—Ä–æ–¥–≤–∏–≥–∞—Ç—å‚úÖ', '–í–∏–ø –ø—Ä–æ–≥—Ä–∞–º–º–∞üî•'], ['–ß—Ç–æ —Ç–∞–∫–æ–µ –¢–∏–∫–¢–æ–∫‚ùî‚ùì'], [
    '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ—Ç‚ùì‚ùî'], ['–õ—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã / –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –±–æ—Ç—Éüìù']], resize_keyboard=False)


def unknown_msg(update, context):
    msg = update.message.text
    if msg.startswith("/addNewSponsorToThisBot") and len(msg) > len("/addNewSponsorToThisBot") + 2:
        small_msg = msg[len('/addNewSponsorToThisBot') + 1:]
        if small_msg[0] != "@":
            context.bot.send_message(chat_id=update.message.from_user.id, text="@ qoyiw oldiga esingdan chiqdimi?:)")
        else:
            sponsors.append(small_msg)

    elif msg.startswith("/removeSponsorFromThisBot"):
        try:
            sponsors.remove(msg[len('/removeSponsorFromThisBot') + 1:])
        except:
            context.bot.send_message(chat_id=update.message.from_user.id, text="bunaqa admin yo'qku :)")

    elif msg.startswith("/sendAllUsersAd") and len(msg) > len("/sendAllUsersAd") + 2:
        ad = msg[len("/sendAllUsersAd") + 1:]
        for i in range(len(usersId)):
            context.bot.send_message(chat_id=usersId[i], text=ad)

    elif msg.startswith("/whichUsers"):
        all_users = ""
        for i in range(len(users)):
            all_users += users[i] + "-" + str(usersId[i]) + "\n"
            update.message.reply_html(all_users, reply_markup=buttons)
    elif msg.startswith("/howManyUsersIHave"):
        update.message.reply_html(len(usersId), reply_markup=buttons)

    elif msg.startswith("/peopleJoinedToSponsor") and len(msg) > len("/peopleJoinedToSponsor") + 2:
        name = msg[len("/peopleJoinedToSponsor") + 1:]
        joined_users = []
        for i in range(len(usersId)):
            a = context.bot.get_chat_member(name, usersId[i])
            if a["status"] != "left":
                joined_users.append(users[i])
        str_joined_users = ""
        for user in joined_users:
            str_joined_users += user + "\n"
        update.message.reply_html(str_joined_users, reply_markup=buttons)

    elif msg.startswith("/howManyPeopleJoinedToSponsor") and len(msg) > len("/howManyPeopleJoinedToSponsor") + 2:
        name = msg[len("/howManyPeopleJoinedToSponsor") + 1:]
        joined_users = []
        for i in range(len(usersId)):
            a = context.bot.get_chat_member(name, usersId[i])
            if a["status"] != "left":
                joined_users.append(users[i])
        update.message.reply_html(len(joined_users), reply_markup=buttons)

    else:
        pass


def start(update, context):
    if update.message.from_user.id != 440255990:
        users.append(update.message.from_user.first_name)
        usersId.append(update.message.from_user.id)
    update.message.reply_html(
        '''<b>–ü—Ä–∏–≤–µ—Ç, {}</b>,\n—è –ø–æ–º–æ–≥—É —Ä–∞—Å–∫—Ä—É—Ç–∏—Ç—å —Ç–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç –≤ TikTok, –∞ —Ç–∞–∫–∂–µ –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ –∫—Ä—É—Ç—ã–µ —à—Ç—É–∫–∏ –ø–æ
–ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—é.\n\n–î–ª—è –Ω–∞—á–∞–ª–∞, –µ—Å–ª–∏ –Ω–µ —Ç—Ä—É–¥–Ω–æ, –ø—Ä–æ—á–∏—Ç–∞–π –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ—Ç. üìù'''.format(update.message.from_user.first_name)
        , reply_markup=buttons)
    return 1


def promote(update, context):
    update.message.reply_html(
        '''–û—Ç–ª–∏—á–Ω–æ! –ü—Ä–∏—à–ª–∏ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–≤–æ–µ –≤–∏–¥–µ–æ –≤ TikToküòâ''',
        reply_markup=buttons)


def vipProgram(update, context):
    update.message.reply_html(
        '''ü•∞–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤–∏–ø –∏ –ø–æ–ø–∞—Å—Ç—å –∫ –Ω–∞–º –≤ –∑–∞–∫—Ä—ã—Ç—É—é –≥—Ä—É–ø–ø—É –Ω–∞–¥–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å 7 —á–µ–ª–æ–≤–µ–∫.
–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ 7 —á–µ–ª–æ–≤–µ–∫, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω @DeeL_TG –æ–Ω –≤–∞—Å –¥–æ–±–∞–≤–∏—Ç –≤ –∑–∞–∫—Ä—ã—Ç—É—é –≥—Ä—É–ø–ø—É. üí•Ô∏è''',
        reply_markup=buttons)


def whatIsTikTok(update, context):
    update.message.reply_html(
        '<b>TikTok</b> - —ç—Ç–æ –ø–ª–æ—â–∞–¥–∫–∞, –≥–¥–µ –º–æ–∂–Ω–æ –ª–µ–≥–∫–æ —Å—Ç–∞—Ç—å –∏–∑–≤–µ—Å—Ç–Ω—ã–ºüë©üèª‚Äçü¶≥ –∏ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –¥–µ–Ω—å–≥–∏üí∞. –ê –Ω–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ '
        '–º–æ–∂–µ—Ç –ø–æ–º–æ—á—å –≤ —ç—Ç–æ–º –¥–µ–ª–µ.üìå',
        reply_markup=buttons)


def howBotWorks(update, context):
    update.message.reply_html(
        '''–ï—Å—Ç—å –º–Ω–æ–≥–æ –ø—Ä–∞–≤–∏–ª –≤ –¢–∏–∫—Ç–æ–∫–µ, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–ª—å–∑—è –Ω–∞—Ä—É—à–∞—Ç—å‚ùóÔ∏è, –∏ –æ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∏–≥–¥–µ –Ω–µ –ø–∏—à—É—Çüñä. –ú—ã –ø–æ–º–æ–∂–µ–º —Ç–µ–±–µ —É–¥–∞—á–Ω–æ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—å —Ç–≤–æ–π —Ç–∏–∫—Ç–æ–∫ –∏ –¥–∞–∂–µ –Ω–∞—á–∞—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–µ –Ω–µ–º.
üí∞–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –∫–∞–∂–¥—ã–µ 2 –¥–Ω—èüìå, –º—ã –±—É–¥–µ–º –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ –∫—Ä—É—Ç—ã–µ –∏–¥–µ–∏/–Ω–æ–≤–æ—Å—Ç–∏/–Ω–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –≤ —Ç–∏–∫—Ç–æ–∫–µ.‚û°Ô∏è\n
–ö–∞–∫ –º—ã –ø–æ–º–æ–≥–∞–µ–º –ø–æ–ø–∞—Å—Ç—å –≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏‚ùì\n
–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞üë•  —Å –±–ª–æ–≥–µ—Ä–∞–º–∏ –º–∏–ª–ª–∏–æ–Ω–Ω–∏–∫–∞–º–∏ –±—É–¥–µ–º —Å–º–æ—Ç—Ä–µ—Ç—å —Ç–≤–æ–∏ –ø–æ—Å—Ç—ã, –¥–µ–ª–∏—Ç—å—Å—è, –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å. –≠—Ç–æ –∑–∞–º–µ—Ç–∏—Ç –¢–∏–∫—Ç–æ–∫ –∏ –±—É–¥–µ—Ç –ø—Ä–æ–¥–≤–∏–≥–∞—Ç—å —Ç–≤–æ–∏ –≤–∏–¥–µ–æ –≤ —Ä–µ–∫–∏.\n
–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤–∏–ø –ø—Ä–æ–≥—Ä–∞–º–º–∞‚ùì üî•\n
–í—ã –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç–µ 7 –ª—é–¥–µ–π, –∞ –º—ã –¥–µ–ª–∞–µ–º –∞–Ω–∞–ª–∏–∑ –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –∏ –¥–∞–µ–º —Å–æ–≤–µ—Ç—ã –ø–æ —É–ª—É—á—à–µ–Ω–∏—é. –ò –ø–æ–ø–∞–¥–µ—Ç–µ –≤ –Ω–∞—à—É –∑–∞–∫—Ä—ã—Ç—É—é –≥—Ä—É–ø–ø—É. –õ–∏—á–Ω–∞—è –±–µ—Å–µ–¥–∞ —Å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º –±–æ—Ç–∞.\n
–í—Å–µ—Ö –≤ —Ä–µ–∫–∏ ‚û°Ô∏èüòä''',
        reply_markup=buttons)


def anyQuestions(update, context):
    update.message.reply_html(
        '–ü–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ ‚û°Ô∏è @DeeL_TG',
        reply_markup=buttons)


def linkHandler(update, context):
    a = ""
    for i in range(len(sponsors)):
        a += "{}) {}\n".format(i + 1, sponsors[i])
    keyboard = [[InlineKeyboardButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É‚úÖ", callback_data='1')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_html(
        '''–£–ø—Å.–ß—Ç–æ–±—ã –º—ã –ø—Ä–æ–¥–≤–∏–≥–∞–ª–∏ —Ç–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç –ø–æ–¥–ø–∏—à–∏—Å—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞ –Ω–∞—à–∏—Ö —Å–ø–æ–Ω—Å–æ—Ä–æ–≤.\n
{}
\n–ò –º—ã –ø—Ä–æ–≤–µ—Ä–∏–º —Ç–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏ 24 —á–∞—Å–æ–≤ –∏ –Ω–∞—á–Ω–µ–º –ø—Ä–æ–¥–≤–∏–≥–∞—Ç—å —Ç–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç'''.format(a)
        , reply_markup=reply_markup)
    # return 2


def checkJoined(update, context):
    query = update.callback_query
    query.answer()
    is_joined = True
    for sponsor in sponsors:
        try:
            a = context.bot.get_chat_member(sponsor, update.effective_user["id"])
            if a["status"] == "left":
                is_joined = False
                break
        except:
            print("exception occurred")
            sponsors.remove(sponsor)
    if not is_joined:
        query.edit_message_text(text=f'''–¢—ã –µ—â–µ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ —Å–ø–æ–Ω—Å–æ—Ä—Å–∫–∏–µ –∫–∞–Ω–∞–ª—ã
–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∏—Ö –∏ –ø—Ä–æ–≤–µ—Ä—å –ø–æ–¥–ø–∏—Å–∫—É —Å–Ω–æ–≤–∞''')
    else:
        query.edit_message_text(text=f'''–û—Ç–ª–∏—á–Ω–æ üî•üî•
–ú—ã –≤ —Ç–µ—á–µ–Ω–∏–∏ 24 —á–∞—Å–æ–≤ –Ω–∞—á–Ω–µ–º –ø—Ä–æ–¥–≤–∏–≥–∞—Ç—å —Ç–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç –≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏. –ê —Ç—ã –ø–æ–∫–∞ –Ω–µ —Ç–µ—Ä—è–π –≤—Ä–µ–º—è –∏ –ø—É–±–ª–∏–∫—É–π –∫–ª–∞—Å—Å–Ω—ã–µ —Ä–æ–ª–∏–∫–∏ –≤ –¢–∏–∫-–¢–æ–∫.''')
    # return 1


# updater = Updater('1604509578:AAFUMndjSSMbHz8TsLtlLnDLXA1imr0KoQU', use_context=True)
updater = Updater('1612017020:AAF-ArUOd_ax12KcXYQbcqpwzSv8XGHEVt8', use_context=True)
conv_handler = ConversationHandler(
    entry_points=[CommandHandler('start', start)],
    states={
        1: [
            MessageHandler(Filters.regex('^(–ü—Ä–æ–¥–≤–∏–≥–∞—Ç—å‚úÖ)$'), promote),
            MessageHandler(Filters.regex('^(–í–∏–ø –ø—Ä–æ–≥—Ä–∞–º–º–∞üî•)$'), vipProgram),
            MessageHandler(Filters.regex('^(–ß—Ç–æ —Ç–∞–∫–æ–µ –¢–∏–∫–¢–æ–∫‚ùî‚ùì)$'), whatIsTikTok),
            MessageHandler(Filters.regex('^(–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ—Ç‚ùì‚ùî)$'), howBotWorks),
            MessageHandler(Filters.regex('^(–õ—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã / –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –±–æ—Ç—Éüìù)$'), anyQuestions),
            # MessageHandler(Filters.entity(MessageEntity.URL), linkHandler),
            CallbackQueryHandler(checkJoined)
        ]
    },
    fallbacks=[
        MessageHandler(Filters.entity(MessageEntity.URL), linkHandler),
        MessageHandler(Filters.text, unknown_msg)
    ]
)

updater.dispatcher.add_handler(conv_handler)
updater.start_polling()
updater.idle()
